/*
 * ApplicationInsights-Java
 * Copyright (c) Microsoft Corporation
 * All rights reserved.
 *
 * MIT License
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this
 * software and associated documentation files (the ""Software""), to deal in the Software
 * without restriction, including without limitation the rights to use, copy, modify, merge,
 * publish, distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or
 * substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
 * FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

// region Common configurations

ext.buildScriptsDir = "$rootDir/gradle"

apply from: "$buildScriptsDir/common.gradle"
apply from: "$buildScriptsDir/test.gradle"

// endregion Common configurations

// region Root project script

def rootProjectBuildFolder = "$rootDir/build"
ext {
    isBuildServer = (System.properties["isBuildServer"] ?: "false").toBoolean()
    isRelease = (System.properties["isRelease"] ?: "false").toBoolean()
    if (isBuildServer) {
        logger.lifecycle "Building on SERVER"
    }
    else {
        logger.lifecycle "Building on DESKTOP"
    }
}

task clean {
    doLast {
        delete(rootProjectBuildFolder)
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        doFirst {
            logger.info("sourceCompatibility = $sourceCompatibility")
            logger.info("tatgetCompatibility = $targetCompatibility")
            logger.info("options.bootClasspath = $options.bootClasspath")
            logger.info("options.compilerArgs = $options.compilerArgs")
        }
    }
}

// endregion Root project script

maven {
    url 'https://pkgs.dev.azure.com/AASolutions/_packaging/AXA-ApplicationInsights/maven/v1'
    credentials {
        username "AZURE_ARTIFACTS"
        password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") ?: "${azureArtifactsGradleAccessToken}"
    }
}

